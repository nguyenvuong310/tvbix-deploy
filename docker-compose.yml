version: "3.8"

services:
  zabbix-server:
    image: "zabbix/zabbix-server-pgsql:ubuntu-7.2.1"
    container_name: server
    restart: unless-stopped
    ports:
      - "10051:10051"
    environment:
      DB_SERVER_HOST: postgres
      DB_SERVER_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ZBX_WEBSERVICEURL: ${ZBX_WEBSERVICEURL}
      ZBX_STARTREPORTWRITERS: 1 # Enable Report Manager
    depends_on:
      - postgres
    networks:
      - network-datn-deploy

  zabbix-web-service:
    image: zabbix/zabbix-web-service:ubuntu-7.2.1
    container_name: web-service
    restart: unless-stopped
    ports:
      - "10053:10053"
    environment:
      ZBX_WEBSERVICE_LISTENPORT: 10053
      ZBX_ALLOWEDIP: "0.0.0.0/0"
      ZBX_CHROMEBIN: "/usr/bin/chromium"
      ZBX_WEBSERVICE_TIMEOUT: 600
    networks:
      - network-datn-deploy

  zabbix-frontend:
    image: "vuong676/tvbix:latest"
    restart: unless-stopped
    container_name: frontend
    # ports:
    #   - "8080:8080"
    #   - "8443:8443"
    environment:
      DB_SERVER_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PHP_TZ: ${TZ}
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      ZBX_SERVER_NAME: "Camera TVBIX Server"
    # volumes:
    #   - ./zabbix-frontend:/usr/share/zabbix
    depends_on:
      - zabbix-server
    networks:
      - network-datn-deploy

  postgres:
    image: postgres:16-alpine
    # command: -c ssl=on -c ssl_cert_file=/run/secrets/server-cert.pem -c ssl_key_file=/run/secrets/server-key.pem -c ssl_ca_file=/run/secrets/root-ca.pem
    container_name: postgres
    restart: unless-stopped
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      # - pgsql_socket:/var/run/postgresql/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_DATA: /var/lib/postgresql/data/pgdata
    networks:
      - network-datn-deploy

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    # ports:
    #   - "9090:8080"
    depends_on:
      - postgres
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - network-datn-deploy

  webserver:
    image: nginx:1.27.0-alpine
    container_name: webserver
    restart: unless-stopped
    depends_on:
      - zabbix-frontend
    ports:
      - "80:80"
      - "443:443"
    command: >
      sh -c "while :; do sleep 6h && nginx -s reload; done & nginx -g 'daemon off;'"
    volumes:
      - ./webserver/certbot/conf:/etc/letsencrypt
      - ./webserver/certbot/www:/var/www/certbot
      - ./webserver/nginx/app.conf:/etc/nginx/conf.d/app.conf:ro

    networks:
      - network-datn-deploy

  ssl:
    image: certbot/certbot:v2.10.0
    container_name: ssl
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./webserver/certbot/conf:/etc/letsencrypt/:rwv
      - ./webserver/certbot/www:/var/www/certbot/:rw
    networks:
      - network-datn-deploy

volumes:
  postgres: {}

networks:
  network-datn-deploy:
    driver: bridge
